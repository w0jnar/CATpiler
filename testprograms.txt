//
//Alan's test programs
//

//good code, should run perfectly

{}$

{{{{{{}}}}}}$

{print(a)}$

{print(2)}$

{print("a")}$

{print(false)}$

{print("inta")}$

{a=1}$

{a = 1}$

{a = 1 + 2 + 3 + 4   +   5}$

{a = 4 + a}$

{int a}$

{string a}$

{boolean a}$

{
 int a
 a = a
 string b
 a = b
}$

{int a a=a string b a=b}$

{{{{{{a=1+2+3+4+5{print(4+a)}}}}}}}$

{
 a=1+2+3+4+5
 print(a)
 print(7)
 print(7+a)
 print("")
 print("aa")
 print("inta")
 print(1+2+3+4+5)
 print(false)
 print(true)
}$

{
 int a
 a = 1
 {
  int a
  a = 2
  print(a)
 }
 string b
 b = "alan"
 if(a == 1) {
   print(b)
 }
 string c
 c = "james"
 b = "blackstone"
 print(b)
} $

{
 int a
 a = 0
 string z
 z = "bond"
 while (a != 9) {
  if(a != 5) {
    print("bond")
  }
  {
   a = 1 + a
   string b
   b = "james bond"
   print(b)
  }
 }
 {}
 boolean c
 c = true
 boolean d
 d = (true == (true == false))
 d = (a == b)
 d = (1 == a)
 d = (1 != 1)
 d = ("string" == 1)
 d = (a != "string")
 if(d == true) {
   int c
   c = 1 + d
   if(c == 1){
     print("ugh")
   }
 }
 while ("string" == a){
  while(1 == true){
   a = 1 + "string"
  }
 }
}$

//questionable code, should issue warnings

{}

{print(2)}$extra code

//bad code, should fail at some point

{"$"}$

{"no spaces"}$

{"two 
lines"}$

{a=12}$

{print(007)}$

{print("007")}$

{int A}$

{thisisnotalexeme}$

{1 = 2}$

{a}$

{print(a+4)}$

{{{{{a=1+2+3+4+5{print(4+a)}}}}}}}$

print(a){print(a)}$

{print(a$}$

{string 1}$

{
 ~!@#%^&*_+{}|:<>?[];',./
 bool ean d
}$

{
 while "a" {
  print("a")
 }
 print("done")
}$

{
 int a
 a == 6
}$

{
 int a
 a = 1
 if(a == 1{
   print(while(a == 5){})
 }$
}

{
 int a
 print (a)
}
{
 a = 0
}$